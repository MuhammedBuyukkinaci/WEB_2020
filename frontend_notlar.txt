HTML:
1) html etiketi body ve head etiketlerinden oluşur.
2) head altındaki meta etiketleri arama motorları açısından önemlidir.
3) <!DOCTYPE html> ise HTML5 olduğuna işaret eder.
4) h1'den h6'ya kadar başlık etiketi var. h1'den h6'ya doğru büyüklük ve önem azalıyor.
5) SEO kriterlerine göre, h1'den 1 html dosyasında 1 tane, h2'den ise 4 tane olması idealdir.
6) Etiket kullanmanın avantajını, css işlemi uygularken görüyoruz. Etiketsiz yazıya css operasyonu yapılmıyor.
7) b ve strong etiketi aynıdır(kalın). i ile em etiketi aynıdır(italik). u ile ins etiketi (altı çizili) aynıdır. del üstü çizilmiş yazı için kullanılan etikettir.
8) <hr> ise yatay çizgi çekmek için kullanılır.
9) mark etiketi ise sarı arka plan yapmak için kullanılır.
10) ul ve ol list oluşturmak için kullanılan etiketlerdir. li element'i temsiz eder.
11) img etiketinin alt attribute'ü resim olmadığında yazan yazıdır.
12) a etiketi inline bir etikettir, p etiketi ise inline değildir yeni satıra geçer.
13) Arama motorları anlamsal etiketleri (semantik elements) severler.

CSS:
1) 3 çeşit css kodu yazma türü imkanı var: Inline, Internal ve External.
2) Id'deki kod class'ı ezer, class'taki da tag'dekini ezer. Id'de tanımlanmış bir css kodundaki şey gerçekleşmiş olur.
3)Gruop Selectors için bazı notlar:
<!-- Notes on Group Selectors -->
<!-- * -> all etiketleri -->
<!-- p -> tüm p etiketleri  -->
<!-- div p -> div içindeki tüm p etiketleri -->
<!-- div,p -> tüm div ve p etiketleri-->
<!-- div > p -> üst etiketi div olan tüm p etiketleri -->
<!-- p ~ div -> p ile aynı seviyede tüm div -->
<!-- p + div -> p etiketinden sonra div -->
4)Attribute Selectors, örneğin p tag'inde title'ı title1 olanlara css işlemi uygulamak için şöyle bir css kodu yazıyoruz. Attribute selector'ları genelde formlar için kullanılır.

p[title="title1"]{
    border: 3px solid blue;
    background-color: brown;
}

multiple filters for Attribute Selectors
p[title="title1"][lang="13"]{
    border: 3px solid blue;
    background-color: brown;
}

5) Pseudo Selectors
6) Bir tag'in üzerine gelindiğinde aşağıdaki olaylar gerçekleşebilir: link, visited, hover, active
7) div in overflow diye bir attribute'ü var. Bu attribute bize div'in taşması durumunda ne yapılabilceğini söylüyor. 
8) div'in display diye bir özelliği var, bu özellik, none, inline, block, inline-block değerleri alabiliyor. div default olarak block'tur, yani satırı olduğu gibi kaplar. JS ile beraber daha çok kullanılan bir özellik.
9) a'nın ve span'ın display özellği ise inline'dır. Inline elemanlara yükseklik vermek için display'i block'a çevirilmeli ve sonra yüksekliği değiştirilmeli.
10) position'ın alabilceği 5 farklı değer var: static, relative, fixed, absolute, sticky. Default'u static'tir. Eğer ki bir div'in sabit olarak sürekli browser'da görünmesini istiyorsak, position'ı fixed yapmalıyız. Sticky ise menü hazırlarken kullanılabilir.
11) margin, border ve paddingi le 2 farklı model yapısı kullanılabilir. content model: box-sizing: content-box olan modellerdir, bu modellerde padding ve border'ın genişlikleri, width'in üzerine eklenir. , box model: box-sizing: border-box olan modellerdir, bu modellerde padding ve border'ın genişlikleri, width'in içindedir.
12) Tag'i yatay olarak center etmek için, margin: auto kullanılmalı.
13) Bir web uygulamasını en son test ederken, sadece chrome'da değil, safari ve firefox'da da test etmeliyiz.
14) Google Fonts'u, font tipi seçerken kullanabiliriz.
15) box-shadow, bir tag'in(p veya div vs.) arkasında gölge çıkmasını sağlayan bir css özelliğidir
